/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.zamia.verilog.node;

import org.zamia.verilog.analysis.*;

@SuppressWarnings("nls")
public final class AP1ParameterDeclarations extends PParameterDeclarations
{
    private TKParameter _kParameter_;
    private TKSigned _kSigned_;
    private PRange _range_;
    private PListOfParamAssignments _listOfParamAssignments_;
    private TTComma _tComma_;
    private PParameterDeclarations _parameterDeclarations_;

    public AP1ParameterDeclarations()
    {
        // Constructor
    }

    public AP1ParameterDeclarations(
        @SuppressWarnings("hiding") TKParameter _kParameter_,
        @SuppressWarnings("hiding") TKSigned _kSigned_,
        @SuppressWarnings("hiding") PRange _range_,
        @SuppressWarnings("hiding") PListOfParamAssignments _listOfParamAssignments_,
        @SuppressWarnings("hiding") TTComma _tComma_,
        @SuppressWarnings("hiding") PParameterDeclarations _parameterDeclarations_)
    {
        // Constructor
        setKParameter(_kParameter_);

        setKSigned(_kSigned_);

        setRange(_range_);

        setListOfParamAssignments(_listOfParamAssignments_);

        setTComma(_tComma_);

        setParameterDeclarations(_parameterDeclarations_);

    }

    @Override
    public Object clone()
    {
        return new AP1ParameterDeclarations(
            cloneNode(this._kParameter_),
            cloneNode(this._kSigned_),
            cloneNode(this._range_),
            cloneNode(this._listOfParamAssignments_),
            cloneNode(this._tComma_),
            cloneNode(this._parameterDeclarations_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAP1ParameterDeclarations(this);
    }

    public TKParameter getKParameter()
    {
        return this._kParameter_;
    }

    public void setKParameter(TKParameter node)
    {
        if(this._kParameter_ != null)
        {
            this._kParameter_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._kParameter_ = node;
    }

    public TKSigned getKSigned()
    {
        return this._kSigned_;
    }

    public void setKSigned(TKSigned node)
    {
        if(this._kSigned_ != null)
        {
            this._kSigned_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._kSigned_ = node;
    }

    public PRange getRange()
    {
        return this._range_;
    }

    public void setRange(PRange node)
    {
        if(this._range_ != null)
        {
            this._range_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._range_ = node;
    }

    public PListOfParamAssignments getListOfParamAssignments()
    {
        return this._listOfParamAssignments_;
    }

    public void setListOfParamAssignments(PListOfParamAssignments node)
    {
        if(this._listOfParamAssignments_ != null)
        {
            this._listOfParamAssignments_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._listOfParamAssignments_ = node;
    }

    public TTComma getTComma()
    {
        return this._tComma_;
    }

    public void setTComma(TTComma node)
    {
        if(this._tComma_ != null)
        {
            this._tComma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tComma_ = node;
    }

    public PParameterDeclarations getParameterDeclarations()
    {
        return this._parameterDeclarations_;
    }

    public void setParameterDeclarations(PParameterDeclarations node)
    {
        if(this._parameterDeclarations_ != null)
        {
            this._parameterDeclarations_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parameterDeclarations_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._kParameter_)
            + toString(this._kSigned_)
            + toString(this._range_)
            + toString(this._listOfParamAssignments_)
            + toString(this._tComma_)
            + toString(this._parameterDeclarations_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._kParameter_ == child)
        {
            this._kParameter_ = null;
            return;
        }

        if(this._kSigned_ == child)
        {
            this._kSigned_ = null;
            return;
        }

        if(this._range_ == child)
        {
            this._range_ = null;
            return;
        }

        if(this._listOfParamAssignments_ == child)
        {
            this._listOfParamAssignments_ = null;
            return;
        }

        if(this._tComma_ == child)
        {
            this._tComma_ = null;
            return;
        }

        if(this._parameterDeclarations_ == child)
        {
            this._parameterDeclarations_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._kParameter_ == oldChild)
        {
            setKParameter((TKParameter) newChild);
            return;
        }

        if(this._kSigned_ == oldChild)
        {
            setKSigned((TKSigned) newChild);
            return;
        }

        if(this._range_ == oldChild)
        {
            setRange((PRange) newChild);
            return;
        }

        if(this._listOfParamAssignments_ == oldChild)
        {
            setListOfParamAssignments((PListOfParamAssignments) newChild);
            return;
        }

        if(this._tComma_ == oldChild)
        {
            setTComma((TTComma) newChild);
            return;
        }

        if(this._parameterDeclarations_ == oldChild)
        {
            setParameterDeclarations((PParameterDeclarations) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
