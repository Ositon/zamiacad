/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.zamia.verilog.node;

import org.zamia.verilog.analysis.*;

@SuppressWarnings("nls")
public final class APulldownGateInstantiation extends PGateInstantiation
{
    private TKPulldown _kPulldown_;
    private PPulldownStrength _pulldownStrength_;
    private PPullGateInstances _pullGateInstances_;
    private TTSemicolon _tSemicolon_;

    public APulldownGateInstantiation()
    {
        // Constructor
    }

    public APulldownGateInstantiation(
        @SuppressWarnings("hiding") TKPulldown _kPulldown_,
        @SuppressWarnings("hiding") PPulldownStrength _pulldownStrength_,
        @SuppressWarnings("hiding") PPullGateInstances _pullGateInstances_,
        @SuppressWarnings("hiding") TTSemicolon _tSemicolon_)
    {
        // Constructor
        setKPulldown(_kPulldown_);

        setPulldownStrength(_pulldownStrength_);

        setPullGateInstances(_pullGateInstances_);

        setTSemicolon(_tSemicolon_);

    }

    @Override
    public Object clone()
    {
        return new APulldownGateInstantiation(
            cloneNode(this._kPulldown_),
            cloneNode(this._pulldownStrength_),
            cloneNode(this._pullGateInstances_),
            cloneNode(this._tSemicolon_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPulldownGateInstantiation(this);
    }

    public TKPulldown getKPulldown()
    {
        return this._kPulldown_;
    }

    public void setKPulldown(TKPulldown node)
    {
        if(this._kPulldown_ != null)
        {
            this._kPulldown_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._kPulldown_ = node;
    }

    public PPulldownStrength getPulldownStrength()
    {
        return this._pulldownStrength_;
    }

    public void setPulldownStrength(PPulldownStrength node)
    {
        if(this._pulldownStrength_ != null)
        {
            this._pulldownStrength_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pulldownStrength_ = node;
    }

    public PPullGateInstances getPullGateInstances()
    {
        return this._pullGateInstances_;
    }

    public void setPullGateInstances(PPullGateInstances node)
    {
        if(this._pullGateInstances_ != null)
        {
            this._pullGateInstances_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pullGateInstances_ = node;
    }

    public TTSemicolon getTSemicolon()
    {
        return this._tSemicolon_;
    }

    public void setTSemicolon(TTSemicolon node)
    {
        if(this._tSemicolon_ != null)
        {
            this._tSemicolon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tSemicolon_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._kPulldown_)
            + toString(this._pulldownStrength_)
            + toString(this._pullGateInstances_)
            + toString(this._tSemicolon_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._kPulldown_ == child)
        {
            this._kPulldown_ = null;
            return;
        }

        if(this._pulldownStrength_ == child)
        {
            this._pulldownStrength_ = null;
            return;
        }

        if(this._pullGateInstances_ == child)
        {
            this._pullGateInstances_ = null;
            return;
        }

        if(this._tSemicolon_ == child)
        {
            this._tSemicolon_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._kPulldown_ == oldChild)
        {
            setKPulldown((TKPulldown) newChild);
            return;
        }

        if(this._pulldownStrength_ == oldChild)
        {
            setPulldownStrength((PPulldownStrength) newChild);
            return;
        }

        if(this._pullGateInstances_ == oldChild)
        {
            setPullGateInstances((PPullGateInstances) newChild);
            return;
        }

        if(this._tSemicolon_ == oldChild)
        {
            setTSemicolon((TTSemicolon) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
