/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.zamia.verilog.node;

import org.zamia.verilog.analysis.*;

@SuppressWarnings("nls")
public final class AP1ListOfBlockVariableIdentifiers extends PListOfBlockVariableIdentifiers
{
    private PBlockVariableType _blockVariableType_;
    private TTComma _tComma_;
    private PListOfBlockVariableIdentifiers _listOfBlockVariableIdentifiers_;

    public AP1ListOfBlockVariableIdentifiers()
    {
        // Constructor
    }

    public AP1ListOfBlockVariableIdentifiers(
        @SuppressWarnings("hiding") PBlockVariableType _blockVariableType_,
        @SuppressWarnings("hiding") TTComma _tComma_,
        @SuppressWarnings("hiding") PListOfBlockVariableIdentifiers _listOfBlockVariableIdentifiers_)
    {
        // Constructor
        setBlockVariableType(_blockVariableType_);

        setTComma(_tComma_);

        setListOfBlockVariableIdentifiers(_listOfBlockVariableIdentifiers_);

    }

    @Override
    public Object clone()
    {
        return new AP1ListOfBlockVariableIdentifiers(
            cloneNode(this._blockVariableType_),
            cloneNode(this._tComma_),
            cloneNode(this._listOfBlockVariableIdentifiers_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAP1ListOfBlockVariableIdentifiers(this);
    }

    public PBlockVariableType getBlockVariableType()
    {
        return this._blockVariableType_;
    }

    public void setBlockVariableType(PBlockVariableType node)
    {
        if(this._blockVariableType_ != null)
        {
            this._blockVariableType_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._blockVariableType_ = node;
    }

    public TTComma getTComma()
    {
        return this._tComma_;
    }

    public void setTComma(TTComma node)
    {
        if(this._tComma_ != null)
        {
            this._tComma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tComma_ = node;
    }

    public PListOfBlockVariableIdentifiers getListOfBlockVariableIdentifiers()
    {
        return this._listOfBlockVariableIdentifiers_;
    }

    public void setListOfBlockVariableIdentifiers(PListOfBlockVariableIdentifiers node)
    {
        if(this._listOfBlockVariableIdentifiers_ != null)
        {
            this._listOfBlockVariableIdentifiers_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._listOfBlockVariableIdentifiers_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._blockVariableType_)
            + toString(this._tComma_)
            + toString(this._listOfBlockVariableIdentifiers_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._blockVariableType_ == child)
        {
            this._blockVariableType_ = null;
            return;
        }

        if(this._tComma_ == child)
        {
            this._tComma_ = null;
            return;
        }

        if(this._listOfBlockVariableIdentifiers_ == child)
        {
            this._listOfBlockVariableIdentifiers_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._blockVariableType_ == oldChild)
        {
            setBlockVariableType((PBlockVariableType) newChild);
            return;
        }

        if(this._tComma_ == oldChild)
        {
            setTComma((TTComma) newChild);
            return;
        }

        if(this._listOfBlockVariableIdentifiers_ == oldChild)
        {
            setListOfBlockVariableIdentifiers((PListOfBlockVariableIdentifiers) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
