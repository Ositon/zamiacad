/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.zamia.verilog.node;

import org.zamia.verilog.analysis.*;

@SuppressWarnings("nls")
public final class APassenGateInstantiation extends PGateInstantiation
{
    private PPassEnSwitchtype _passEnSwitchtype_;
    private PDelay2 _delay2_;
    private PPassEnableSwitchInstances _passEnableSwitchInstances_;
    private TTSemicolon _tSemicolon_;

    public APassenGateInstantiation()
    {
        // Constructor
    }

    public APassenGateInstantiation(
        @SuppressWarnings("hiding") PPassEnSwitchtype _passEnSwitchtype_,
        @SuppressWarnings("hiding") PDelay2 _delay2_,
        @SuppressWarnings("hiding") PPassEnableSwitchInstances _passEnableSwitchInstances_,
        @SuppressWarnings("hiding") TTSemicolon _tSemicolon_)
    {
        // Constructor
        setPassEnSwitchtype(_passEnSwitchtype_);

        setDelay2(_delay2_);

        setPassEnableSwitchInstances(_passEnableSwitchInstances_);

        setTSemicolon(_tSemicolon_);

    }

    @Override
    public Object clone()
    {
        return new APassenGateInstantiation(
            cloneNode(this._passEnSwitchtype_),
            cloneNode(this._delay2_),
            cloneNode(this._passEnableSwitchInstances_),
            cloneNode(this._tSemicolon_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPassenGateInstantiation(this);
    }

    public PPassEnSwitchtype getPassEnSwitchtype()
    {
        return this._passEnSwitchtype_;
    }

    public void setPassEnSwitchtype(PPassEnSwitchtype node)
    {
        if(this._passEnSwitchtype_ != null)
        {
            this._passEnSwitchtype_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._passEnSwitchtype_ = node;
    }

    public PDelay2 getDelay2()
    {
        return this._delay2_;
    }

    public void setDelay2(PDelay2 node)
    {
        if(this._delay2_ != null)
        {
            this._delay2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._delay2_ = node;
    }

    public PPassEnableSwitchInstances getPassEnableSwitchInstances()
    {
        return this._passEnableSwitchInstances_;
    }

    public void setPassEnableSwitchInstances(PPassEnableSwitchInstances node)
    {
        if(this._passEnableSwitchInstances_ != null)
        {
            this._passEnableSwitchInstances_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._passEnableSwitchInstances_ = node;
    }

    public TTSemicolon getTSemicolon()
    {
        return this._tSemicolon_;
    }

    public void setTSemicolon(TTSemicolon node)
    {
        if(this._tSemicolon_ != null)
        {
            this._tSemicolon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tSemicolon_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._passEnSwitchtype_)
            + toString(this._delay2_)
            + toString(this._passEnableSwitchInstances_)
            + toString(this._tSemicolon_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._passEnSwitchtype_ == child)
        {
            this._passEnSwitchtype_ = null;
            return;
        }

        if(this._delay2_ == child)
        {
            this._delay2_ = null;
            return;
        }

        if(this._passEnableSwitchInstances_ == child)
        {
            this._passEnableSwitchInstances_ = null;
            return;
        }

        if(this._tSemicolon_ == child)
        {
            this._tSemicolon_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._passEnSwitchtype_ == oldChild)
        {
            setPassEnSwitchtype((PPassEnSwitchtype) newChild);
            return;
        }

        if(this._delay2_ == oldChild)
        {
            setDelay2((PDelay2) newChild);
            return;
        }

        if(this._passEnableSwitchInstances_ == oldChild)
        {
            setPassEnableSwitchInstances((PPassEnableSwitchInstances) newChild);
            return;
        }

        if(this._tSemicolon_ == oldChild)
        {
            setTSemicolon((TTSemicolon) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
