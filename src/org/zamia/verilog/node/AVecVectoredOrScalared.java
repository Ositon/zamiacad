/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.zamia.verilog.node;

import org.zamia.verilog.analysis.*;

@SuppressWarnings("nls")
public final class AVecVectoredOrScalared extends PVectoredOrScalared
{
    private TKVectored _kVectored_;

    public AVecVectoredOrScalared()
    {
        // Constructor
    }

    public AVecVectoredOrScalared(
        @SuppressWarnings("hiding") TKVectored _kVectored_)
    {
        // Constructor
        setKVectored(_kVectored_);

    }

    @Override
    public Object clone()
    {
        return new AVecVectoredOrScalared(
            cloneNode(this._kVectored_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVecVectoredOrScalared(this);
    }

    public TKVectored getKVectored()
    {
        return this._kVectored_;
    }

    public void setKVectored(TKVectored node)
    {
        if(this._kVectored_ != null)
        {
            this._kVectored_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._kVectored_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._kVectored_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._kVectored_ == child)
        {
            this._kVectored_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._kVectored_ == oldChild)
        {
            setKVectored((TKVectored) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
