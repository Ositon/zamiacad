/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.zamia.verilog.node;

import org.zamia.verilog.analysis.*;

@SuppressWarnings("nls")
public final class AEventDeclaration extends PEventDeclaration
{
    private TKEvent _kEvent_;
    private PListOfEventIdentifiers _listOfEventIdentifiers_;
    private TTSemicolon _tSemicolon_;

    public AEventDeclaration()
    {
        // Constructor
    }

    public AEventDeclaration(
        @SuppressWarnings("hiding") TKEvent _kEvent_,
        @SuppressWarnings("hiding") PListOfEventIdentifiers _listOfEventIdentifiers_,
        @SuppressWarnings("hiding") TTSemicolon _tSemicolon_)
    {
        // Constructor
        setKEvent(_kEvent_);

        setListOfEventIdentifiers(_listOfEventIdentifiers_);

        setTSemicolon(_tSemicolon_);

    }

    @Override
    public Object clone()
    {
        return new AEventDeclaration(
            cloneNode(this._kEvent_),
            cloneNode(this._listOfEventIdentifiers_),
            cloneNode(this._tSemicolon_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAEventDeclaration(this);
    }

    public TKEvent getKEvent()
    {
        return this._kEvent_;
    }

    public void setKEvent(TKEvent node)
    {
        if(this._kEvent_ != null)
        {
            this._kEvent_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._kEvent_ = node;
    }

    public PListOfEventIdentifiers getListOfEventIdentifiers()
    {
        return this._listOfEventIdentifiers_;
    }

    public void setListOfEventIdentifiers(PListOfEventIdentifiers node)
    {
        if(this._listOfEventIdentifiers_ != null)
        {
            this._listOfEventIdentifiers_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._listOfEventIdentifiers_ = node;
    }

    public TTSemicolon getTSemicolon()
    {
        return this._tSemicolon_;
    }

    public void setTSemicolon(TTSemicolon node)
    {
        if(this._tSemicolon_ != null)
        {
            this._tSemicolon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tSemicolon_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._kEvent_)
            + toString(this._listOfEventIdentifiers_)
            + toString(this._tSemicolon_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._kEvent_ == child)
        {
            this._kEvent_ = null;
            return;
        }

        if(this._listOfEventIdentifiers_ == child)
        {
            this._listOfEventIdentifiers_ = null;
            return;
        }

        if(this._tSemicolon_ == child)
        {
            this._tSemicolon_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._kEvent_ == oldChild)
        {
            setKEvent((TKEvent) newChild);
            return;
        }

        if(this._listOfEventIdentifiers_ == oldChild)
        {
            setListOfEventIdentifiers((PListOfEventIdentifiers) newChild);
            return;
        }

        if(this._tSemicolon_ == oldChild)
        {
            setTSemicolon((TTSemicolon) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
