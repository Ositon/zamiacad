/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.zamia.verilog.node;

import org.zamia.verilog.analysis.*;

@SuppressWarnings("nls")
public final class AP1CmosSwitchInstances extends PCmosSwitchInstances
{
    private PCmosSwitchInstance _cmosSwitchInstance_;
    private TTComma _tComma_;
    private PCmosSwitchInstances _cmosSwitchInstances_;

    public AP1CmosSwitchInstances()
    {
        // Constructor
    }

    public AP1CmosSwitchInstances(
        @SuppressWarnings("hiding") PCmosSwitchInstance _cmosSwitchInstance_,
        @SuppressWarnings("hiding") TTComma _tComma_,
        @SuppressWarnings("hiding") PCmosSwitchInstances _cmosSwitchInstances_)
    {
        // Constructor
        setCmosSwitchInstance(_cmosSwitchInstance_);

        setTComma(_tComma_);

        setCmosSwitchInstances(_cmosSwitchInstances_);

    }

    @Override
    public Object clone()
    {
        return new AP1CmosSwitchInstances(
            cloneNode(this._cmosSwitchInstance_),
            cloneNode(this._tComma_),
            cloneNode(this._cmosSwitchInstances_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAP1CmosSwitchInstances(this);
    }

    public PCmosSwitchInstance getCmosSwitchInstance()
    {
        return this._cmosSwitchInstance_;
    }

    public void setCmosSwitchInstance(PCmosSwitchInstance node)
    {
        if(this._cmosSwitchInstance_ != null)
        {
            this._cmosSwitchInstance_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cmosSwitchInstance_ = node;
    }

    public TTComma getTComma()
    {
        return this._tComma_;
    }

    public void setTComma(TTComma node)
    {
        if(this._tComma_ != null)
        {
            this._tComma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tComma_ = node;
    }

    public PCmosSwitchInstances getCmosSwitchInstances()
    {
        return this._cmosSwitchInstances_;
    }

    public void setCmosSwitchInstances(PCmosSwitchInstances node)
    {
        if(this._cmosSwitchInstances_ != null)
        {
            this._cmosSwitchInstances_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cmosSwitchInstances_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._cmosSwitchInstance_)
            + toString(this._tComma_)
            + toString(this._cmosSwitchInstances_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._cmosSwitchInstance_ == child)
        {
            this._cmosSwitchInstance_ = null;
            return;
        }

        if(this._tComma_ == child)
        {
            this._tComma_ = null;
            return;
        }

        if(this._cmosSwitchInstances_ == child)
        {
            this._cmosSwitchInstances_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._cmosSwitchInstance_ == oldChild)
        {
            setCmosSwitchInstance((PCmosSwitchInstance) newChild);
            return;
        }

        if(this._tComma_ == oldChild)
        {
            setTComma((TTComma) newChild);
            return;
        }

        if(this._cmosSwitchInstances_ == oldChild)
        {
            setCmosSwitchInstances((PCmosSwitchInstances) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
