/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.zamia.verilog.node;

import org.zamia.verilog.analysis.*;

@SuppressWarnings("nls")
public final class AP1PortConnections extends PPortConnections
{
    private PPortConnection _portConnection_;
    private TTComma _tComma_;
    private PPortConnections _portConnections_;

    public AP1PortConnections()
    {
        // Constructor
    }

    public AP1PortConnections(
        @SuppressWarnings("hiding") PPortConnection _portConnection_,
        @SuppressWarnings("hiding") TTComma _tComma_,
        @SuppressWarnings("hiding") PPortConnections _portConnections_)
    {
        // Constructor
        setPortConnection(_portConnection_);

        setTComma(_tComma_);

        setPortConnections(_portConnections_);

    }

    @Override
    public Object clone()
    {
        return new AP1PortConnections(
            cloneNode(this._portConnection_),
            cloneNode(this._tComma_),
            cloneNode(this._portConnections_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAP1PortConnections(this);
    }

    public PPortConnection getPortConnection()
    {
        return this._portConnection_;
    }

    public void setPortConnection(PPortConnection node)
    {
        if(this._portConnection_ != null)
        {
            this._portConnection_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._portConnection_ = node;
    }

    public TTComma getTComma()
    {
        return this._tComma_;
    }

    public void setTComma(TTComma node)
    {
        if(this._tComma_ != null)
        {
            this._tComma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tComma_ = node;
    }

    public PPortConnections getPortConnections()
    {
        return this._portConnections_;
    }

    public void setPortConnections(PPortConnections node)
    {
        if(this._portConnections_ != null)
        {
            this._portConnections_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._portConnections_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._portConnection_)
            + toString(this._tComma_)
            + toString(this._portConnections_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._portConnection_ == child)
        {
            this._portConnection_ = null;
            return;
        }

        if(this._tComma_ == child)
        {
            this._tComma_ = null;
            return;
        }

        if(this._portConnections_ == child)
        {
            this._portConnections_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._portConnection_ == oldChild)
        {
            setPortConnection((PPortConnection) newChild);
            return;
        }

        if(this._tComma_ == oldChild)
        {
            setTComma((TTComma) newChild);
            return;
        }

        if(this._portConnections_ == oldChild)
        {
            setPortConnections((PPortConnections) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
