/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.zamia.verilog.node;

import org.zamia.verilog.analysis.*;

@SuppressWarnings("nls")
public final class AP0PathDelayValue extends PPathDelayValue
{
    private PDelayValueSimple _delayValueSimple_;

    public AP0PathDelayValue()
    {
        // Constructor
    }

    public AP0PathDelayValue(
        @SuppressWarnings("hiding") PDelayValueSimple _delayValueSimple_)
    {
        // Constructor
        setDelayValueSimple(_delayValueSimple_);

    }

    @Override
    public Object clone()
    {
        return new AP0PathDelayValue(
            cloneNode(this._delayValueSimple_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAP0PathDelayValue(this);
    }

    public PDelayValueSimple getDelayValueSimple()
    {
        return this._delayValueSimple_;
    }

    public void setDelayValueSimple(PDelayValueSimple node)
    {
        if(this._delayValueSimple_ != null)
        {
            this._delayValueSimple_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._delayValueSimple_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._delayValueSimple_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._delayValueSimple_ == child)
        {
            this._delayValueSimple_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._delayValueSimple_ == oldChild)
        {
            setDelayValueSimple((PDelayValueSimple) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
