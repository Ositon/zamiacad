/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.zamia.verilog.node;

import org.zamia.verilog.analysis.*;

@SuppressWarnings("nls")
public final class AP1CaseItem extends PCaseItem
{
    private TKDefault _kDefault_;
    private TTColon _tColon_;
    private PStatementOrNull _statementOrNull_;

    public AP1CaseItem()
    {
        // Constructor
    }

    public AP1CaseItem(
        @SuppressWarnings("hiding") TKDefault _kDefault_,
        @SuppressWarnings("hiding") TTColon _tColon_,
        @SuppressWarnings("hiding") PStatementOrNull _statementOrNull_)
    {
        // Constructor
        setKDefault(_kDefault_);

        setTColon(_tColon_);

        setStatementOrNull(_statementOrNull_);

    }

    @Override
    public Object clone()
    {
        return new AP1CaseItem(
            cloneNode(this._kDefault_),
            cloneNode(this._tColon_),
            cloneNode(this._statementOrNull_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAP1CaseItem(this);
    }

    public TKDefault getKDefault()
    {
        return this._kDefault_;
    }

    public void setKDefault(TKDefault node)
    {
        if(this._kDefault_ != null)
        {
            this._kDefault_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._kDefault_ = node;
    }

    public TTColon getTColon()
    {
        return this._tColon_;
    }

    public void setTColon(TTColon node)
    {
        if(this._tColon_ != null)
        {
            this._tColon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tColon_ = node;
    }

    public PStatementOrNull getStatementOrNull()
    {
        return this._statementOrNull_;
    }

    public void setStatementOrNull(PStatementOrNull node)
    {
        if(this._statementOrNull_ != null)
        {
            this._statementOrNull_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._statementOrNull_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._kDefault_)
            + toString(this._tColon_)
            + toString(this._statementOrNull_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._kDefault_ == child)
        {
            this._kDefault_ = null;
            return;
        }

        if(this._tColon_ == child)
        {
            this._tColon_ = null;
            return;
        }

        if(this._statementOrNull_ == child)
        {
            this._statementOrNull_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._kDefault_ == oldChild)
        {
            setKDefault((TKDefault) newChild);
            return;
        }

        if(this._tColon_ == oldChild)
        {
            setTColon((TTColon) newChild);
            return;
        }

        if(this._statementOrNull_ == oldChild)
        {
            setStatementOrNull((PStatementOrNull) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
