/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.zamia.verilog.node;

import org.zamia.verilog.analysis.*;

@SuppressWarnings("nls")
public final class AP1MosSwitchInstances extends PMosSwitchInstances
{
    private PMosSwitchInstance _mosSwitchInstance_;
    private TTComma _tComma_;
    private PMosSwitchInstances _mosSwitchInstances_;

    public AP1MosSwitchInstances()
    {
        // Constructor
    }

    public AP1MosSwitchInstances(
        @SuppressWarnings("hiding") PMosSwitchInstance _mosSwitchInstance_,
        @SuppressWarnings("hiding") TTComma _tComma_,
        @SuppressWarnings("hiding") PMosSwitchInstances _mosSwitchInstances_)
    {
        // Constructor
        setMosSwitchInstance(_mosSwitchInstance_);

        setTComma(_tComma_);

        setMosSwitchInstances(_mosSwitchInstances_);

    }

    @Override
    public Object clone()
    {
        return new AP1MosSwitchInstances(
            cloneNode(this._mosSwitchInstance_),
            cloneNode(this._tComma_),
            cloneNode(this._mosSwitchInstances_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAP1MosSwitchInstances(this);
    }

    public PMosSwitchInstance getMosSwitchInstance()
    {
        return this._mosSwitchInstance_;
    }

    public void setMosSwitchInstance(PMosSwitchInstance node)
    {
        if(this._mosSwitchInstance_ != null)
        {
            this._mosSwitchInstance_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._mosSwitchInstance_ = node;
    }

    public TTComma getTComma()
    {
        return this._tComma_;
    }

    public void setTComma(TTComma node)
    {
        if(this._tComma_ != null)
        {
            this._tComma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tComma_ = node;
    }

    public PMosSwitchInstances getMosSwitchInstances()
    {
        return this._mosSwitchInstances_;
    }

    public void setMosSwitchInstances(PMosSwitchInstances node)
    {
        if(this._mosSwitchInstances_ != null)
        {
            this._mosSwitchInstances_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._mosSwitchInstances_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._mosSwitchInstance_)
            + toString(this._tComma_)
            + toString(this._mosSwitchInstances_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._mosSwitchInstance_ == child)
        {
            this._mosSwitchInstance_ = null;
            return;
        }

        if(this._tComma_ == child)
        {
            this._tComma_ = null;
            return;
        }

        if(this._mosSwitchInstances_ == child)
        {
            this._mosSwitchInstances_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._mosSwitchInstance_ == oldChild)
        {
            setMosSwitchInstance((PMosSwitchInstance) newChild);
            return;
        }

        if(this._tComma_ == oldChild)
        {
            setTComma((TTComma) newChild);
            return;
        }

        if(this._mosSwitchInstances_ == oldChild)
        {
            setMosSwitchInstances((PMosSwitchInstances) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
