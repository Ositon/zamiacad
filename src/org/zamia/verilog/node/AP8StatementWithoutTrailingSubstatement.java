/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.zamia.verilog.node;

import org.zamia.verilog.analysis.*;

@SuppressWarnings("nls")
public final class AP8StatementWithoutTrailingSubstatement extends PStatementWithoutTrailingSubstatement
{
    private PSystemTaskEnable _systemTaskEnable_;

    public AP8StatementWithoutTrailingSubstatement()
    {
        // Constructor
    }

    public AP8StatementWithoutTrailingSubstatement(
        @SuppressWarnings("hiding") PSystemTaskEnable _systemTaskEnable_)
    {
        // Constructor
        setSystemTaskEnable(_systemTaskEnable_);

    }

    @Override
    public Object clone()
    {
        return new AP8StatementWithoutTrailingSubstatement(
            cloneNode(this._systemTaskEnable_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAP8StatementWithoutTrailingSubstatement(this);
    }

    public PSystemTaskEnable getSystemTaskEnable()
    {
        return this._systemTaskEnable_;
    }

    public void setSystemTaskEnable(PSystemTaskEnable node)
    {
        if(this._systemTaskEnable_ != null)
        {
            this._systemTaskEnable_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._systemTaskEnable_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._systemTaskEnable_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._systemTaskEnable_ == child)
        {
            this._systemTaskEnable_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._systemTaskEnable_ == oldChild)
        {
            setSystemTaskEnable((PSystemTaskEnable) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
